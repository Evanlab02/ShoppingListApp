on:
  push:
    branches:
      - trunk

permissions: write-all

name: Release Please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: ShoppingListApp-Backend
          token: ${{ secrets.GITHUB_TOKEN }}
          default-branch: trunk
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}
      - name: Build Docker Image
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          docker build -t shoppinglistapp-backend:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} .
          docker build -t shoppinglistapp-backend:latest .
      - name: Log in to registry
        if: ${{ steps.release.outputs.releases_created }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          docker tag shoppinglistapp-backend:${{steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} ghcr.io/evanlab02/shoppingappbe:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker push ghcr.io/evanlab02/shoppingappbe:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker tag shoppinglistapp-backend:latest ghcr.io/evanlab02/shoppingappbe:latest
          docker push ghcr.io/evanlab02/shoppingappbe:latest
      - name: Zip App
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          zip -r backend.zip \
          authentication \
          shoppingapp \
          stores \
          windows \
          .env.template \
          Dockerfile \
          docker-compose.yaml \
          LICENSE \
          manage.py \
          Pipfile \
          Pipfile.lock \
          pyproject.toml \
          README.md \
          requirements.txt \
          ROADMAP.md \
          setup.py \
          version.txt
      - name: Upload zip
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} backend.zip
      - name: Install dependencies
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          pip install -r requirements-dev.txt
          pip install build
      - name: Build App
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          python -m build .
      - name: Upload build artifacts
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} dist/*.whl
          gh release upload ${{ steps.release.outputs.tag_name }} dist/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}