on:
  push:
    branches:
      - trunk

permissions: write-all

name: Release Please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: manifest
          package-name: ShoppingListApp-BE
          token: ${{ secrets.GITHUB_TOKEN }}
          default-branch: trunk
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}
      - name: Build Docker Image
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          docker build -f docker/server/Dockerfile -t shoppinglistapp-backend:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} src/
          docker build -f docker/server/Dockerfile -t shoppinglistapp-backend:latest src/
          docker build -f docker/admin/Dockerfile -t shoppinglistapp-admin:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} src/
          docker build -f docker/admin/Dockerfile -t shoppinglistapp-admin:latest src/
      - name: Log in to registry
        if: ${{ steps.release.outputs.releases_created }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          docker tag shoppinglistapp-backend:${{steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} ghcr.io/evanlab02/shoppingappbe:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker push ghcr.io/evanlab02/shoppingappbe:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker tag shoppinglistapp-backend:latest ghcr.io/evanlab02/shoppingappbe:latest
          docker push ghcr.io/evanlab02/shoppingappbe:latest
          docker tag shoppinglistapp-admin:${{steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} ghcr.io/evanlab02/shoppingappadmin:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker push ghcr.io/evanlab02/shoppingappadmin:${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          docker tag shoppinglistapp-admin:latest ghcr.io/evanlab02/shoppingappadmin:latest
          docker push ghcr.io/evanlab02/shoppingappadmin:latest
      - name: Zip static
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          zip -r static.zip static
      - name: Upload static
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} static.zip
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
      - name: Load .env file
        uses: aarcangeli/load-dotenv@v1.0.0
        if: ${{ steps.release.outputs.releases_created }}
        with:
          path: ""
          filenames: |
            .env.template
          quiet: false
          if-file-not-found: error
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        if: ${{ steps.release.outputs.releases_created }}
        with:
          python-version: "3.11"
      - name: Setup
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          pip install -r requirements-dev.txt
      - name: Create Migrations
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          python manage.py makemigrations
      - name: Run Migrations
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          python manage.py migrate
      - name: Run Tests
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          pytest . --cov=. --cov-report term-missing -n auto
      - name: Generate coverage report
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          coverage html
      - name: Zip coverage report
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          zip -r coverage.zip htmlcov
      - name: Upload coverage report
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          gh release upload ${{ steps.release.outputs.tag_name }} coverage.zip
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}