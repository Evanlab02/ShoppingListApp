version: "3"

services:
  testing-shopping-app-db:
    container_name: test-shopping-app-db
    image: postgres:alpine3.18
    expose:
      - "5432"
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${TESTING_DATABASE_USER}
      POSTGRES_PASSWORD: ${TESTING_DATABASE_PASSWORD}
      POSTGRES_DB: ${TESTING_DATABASE_NAME}
    volumes:
      - testing-shopping-app-db-data:/var/lib/postgresql/data
    networks:
      - testing-shopping-app-network
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${TESTING_DATABASE_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  testing-shopping-app-be:
    container_name: test-shopping-app-be
    build: .
    environment:
      DEFAULT_SETTINGS_MODULE: shoppingapp.settings.test_settings
      TESTING_DATABASE_USER: ${TESTING_DATABASE_USER}
      TESTING_DATABASE_PASSWORD: ${TESTING_DATABASE_PASSWORD}
      TESTING_DATABASE_NAME: ${TESTING_DATABASE_NAME}
      TESTING_DJANGO_KEY: ${TESTING_DJANGO_KEY}
      TESTING_DJANGO_HOST: ${TESTING_DJANGO_HOST}
      TESTING_DB_HOST: ${TESTING_DB_HOST}
      TESTING_DB_PORT: ${TESTING_DB_PORT}
      SERVICE_PORT: ${SERVICE_PORT}
      TESTS_ENVIRONMENT: "True"
    command: python manage.py runserver 0.0.0.0:7001
    expose:
      - "7001"
    ports:
      - "7001:7001"
    networks:
      - testing-shopping-app-network
    depends_on:
      testing-shopping-app-db:
        condition: service_healthy

networks:
  testing-shopping-app-network:
    driver: bridge

volumes:
  testing-shopping-app-db-data:
    external: false
